{
  "root": true,
  "env": {
    "browser": true, // Enables browser global variables (like window, document, etc.)
    "es2021": true // Enables ES2021 globals and syntax.
  },
  "extends": [
    "eslint:recommended", // Uses the recommended rules from ESLint
    "plugin:react/recommended", // Uses the recommended rules for React.
    "plugin:@typescript-eslint/recommended", // Allow ESLint understand TS files. It contains a parser and a bunch of recommended rules for working with Typescript
    "prettier" // Turns off all rules that are unnecessary or might conflict with Prettier, that could be formatting-related ESLint rules.
  ],
  // Specified react version.
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parser": "@typescript-eslint/parser", // This specifies the parser to use for linting TypeScript code. @typescript-eslint/parser parses TypeScript code so ESLint can understand it.
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true // Enables linting of JSX syntax.
    },
    "ecmaVersion": "latest", // Specifies the version of ECMAScript syntax you want to use
    "sourceType": "module" // Specifies the type of modules ("module" for ES6 modules).
  },

  // This section specifies additional plugins to use.
  "plugins": ["react-hooks", "@typescript-eslint"], // No longer need to specify react here because "plugin:react/recommended defines it already

  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": true
      },
      "plugins": ["react-hooks", "typescript-eslint"],
      "rules": {
        "react/react-in-jsx-scope": "off", // No longer need to import React from 'react'
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-explicit-any": "off", // Temporarily disabled variable that has any type
        "react-hooks/exhaustive-deps": "warn" // This rule is disabled by default
      }
    }
  ]
}
